@import 'variables';
@import "@{font-import}";

/* Reset */
path,
circle,
rect {
    fill: none;
    stroke: none;
}

/* Paths */

path { 
    fill: none; 
    stroke: @black;
    stroke-opacity:1; 
    stroke-width: @stroke;
    stroke-linecap:round; 
    stroke-linejoin:round; 
}

path.curve-control { 
    stroke: @warning-color; 
    stroke-width: @stroke-sm;
}

path.seamline { 
    stroke-width: @stroke-lg;
}

path.seam-allowance { 
    stroke-dasharray:1,1.5; 
}

path.marker { 
    stroke: @warning-color; 
    stroke-opacity: 0.4; 
    stroke-width: @stroke-xxl;
}

path.text { fill: none; stroke: none; }

path.note { 
    stroke: @note-color;
    stroke-width: @stroke-lg;
    marker-start:url(#noteArrow)
}



/* Text */

text {
    font-size: @font-size;
    font-family: @font-text;
    fill: @black;
    text-anchor:start;
}

text.part-nr,
text.part-nr-vertical,
text.part-nr-horizontal { 
    font-size: @font-size-nr; 
    text-anchor:middle; 
    fill: @black;
    font-family: @font-title; 
}

text.part-nr,
text.part-nr-vertical {
    transform: translate(0px, -16px); /* FIXME: How do we do this with LESS based on @font-size-nr? */
}

text.part-nr-horizontal { 
    text-anchor:end; 
}

text.part-title, 
text.part-title-vertical, 
text.part-title-horizontal { 
    font-size: @font-size-title;
    text-anchor:middle; 
    fill: @black;
    font-family: @font-title; 
}

text.part-title-horizontal { 
    text-anchor:start; 
    transform: translate(5px, -7px); /* FIXME: How do we do this with LESS based on @font-size-nr? */
}

text.part-msg,
text.part-msg-vertical,
text.part-msg-horizontal { 
    font-size: @font-size-lg;
    text-anchor:middle; 
    fill: @black; 
}

text.part-msg {
    transform: translate(0, 10px ); /* FIXME: How do we do this with LESS based on @font-size-title? */
}

text.part-title-vertical,
text.part-msg-vertical { 
    text-anchor: end; 
}

text.part-msg-horizontal { 
    text-anchor:start; 
    transform: translate(5px, 3px ); /* FIXME: How do we do this with LESS based on @font-size-title? */
}

text.note { 
    fill: @note-color; 
}

text.note tspan { 
    alignment-baseline: middle;
}

text.note-5, 
text.note-6,
text.note-7, 
text.note-11, 
text.note-12, 
text.note-0, 
text.note-1 {
    text-anchor:middle;
}

text.note-8, 
text.note-9, 
text.note-10 {
    text-anchor:end;
}

text.grainline { 
    fill: @fabric-color; 
}

path.arrow { 
    stroke: @note-color;
}

path.grainline { 
    stroke: @fabric-color; 
    stroke-width: @stroke-lg;
    marker-start: url(#fabric-arrowStart); 
    marker-end:url(#fabric-arrowEnd)
}
 
path.measure-sm,  
path.measure-lg, 
path.measure { 
    stroke: @note-color; 
    stroke-width: @stroke;
    marker-start: url(#note-color-arrowStart); 
    marker-end:url(#note-color-arrowEnd)
}
path.measure-lg { 
    stroke-width: @stroke-lg;
}
 
path.measure-sm { 
    stroke-width: @stroke-sm;
}
 
path.single-arrow { 
    marker-start: url(#note-color-arrowStart); 
}

path.double-arrow { 
    marker-start: url(#note-color-arrowStart); 
    marker-end:url(#note-color-arrowEnd)
}

path.textpath {
    stroke: none;
    fille: none;
}

path.helpline {
  stroke: @gray1;
  stroke-width: @stroke-sm;
  stroke-dasharray:0.2,0.6;
}  

/* Debug */

path.debug { 
    stroke: @fabric-color; 
    stroke-opacity: 0.4; 
    stroke-width: @stroke-xxl;
}

.point { 
    fill: none;  
    stroke-width: @stroke-sm; 
    stroke: @gray2;
}



/* Utility */

.stroke-brand   { stroke: @brand-color;   }
.stroke-note    { stroke: @note-color;    }
.stroke-tip     { stroke: @tip-color;     }
.stroke-warning { stroke: @warning-color; }
.stroke-fabric  { stroke: @fabric-color;   }

.fill-brand   { fill: @brand-color;   }
.fill-note    { fill: @note-color;    }
.fill-tip     { fill: @tip-color;     }
.fill-warning { fill: @warning-color; }
.fill-fabric  { fill: @fabric-color;   }

.stroke-black { stroke: @black; }
.stroke-gray1 { stroke: @gray1; }
.stroke-gray2 { stroke: @gray2; }
.stroke-gray3 { stroke: @gray3; }
.stroke-gray4 { stroke: @gray4; }

.fill-black { fill: @black; }
.fill-gray1 { fill: @gray1; }
.fill-gray2 { fill: @gray2; }
.fill-gray3 { fill: @gray3; }
.fill-gray4 { fill: @gray4; }

.text-xs { font-size: @font-size-xs; }
.text-sm { font-size: @font-size-sm; }
.text-lg { font-size: @font-size-lg; }
.text-xl { font-size: @font-size-xl; }

.stroke-xs  { stroke-width: @stroke-xs; }
.stroke-sm  { stroke-width: @stroke-sm; }
.stroke-lg  { stroke-width: @stroke-lg; }
.stroke-xl  { stroke-width: @stroke-xl; }
.stroke-xxl { stroke-width: @stroke-xxl; }

.font-xs  { font-size: @font-size-xs; }
.font-sm  { font-size: @font-size-sm; }
.font-lg  { font-size: @font-size-lg; }
.font-xl  { font-size: @font-size-xl; }
.font-xxl { font-size: @font-size-xxl; }

.text-center { text-anchor:middle; }

.dashed { stroke-dasharray:1,1.5; }
.dotted { stroke-dasharray:0.2,0.6; }

.hidden { stroke: none; file: none;}
